plugins {
    id("io.micronaut.application")
    id("java")
}

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.auth.*")
    }
}

dependencies {
     implementation(platform("io.micronaut.platform:micronaut-platform:4.9.3"))

    // Micronaut Core
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("io.micronaut.validation:micronaut-validation")
    implementation("io.micronaut:micronaut-jackson-databind")

    // Micronaut Data (JPA + Hibernate + PostgresSQL)
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("org.postgresql:postgresql:42.7.3")

    // Micronaut Security (JWT)
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.security:micronaut-security")


    // Lombok
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")

    // MapStruct
    implementation("org.mapstruct:mapstruct:1.5.5.Final")
    annotationProcessor("org.mapstruct:mapstruct-processor:1.5.5.Final")

    runtimeOnly("ch.qos.logback:logback-classic:1.5.6")

    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")

    implementation(project(":common"))//implementing the other module
    implementation 'org.mindrot:jbcrypt:0.4' //encryption of password to store in table
    implementation("io.micronaut.validation:micronaut-validation")//validation
    runtimeOnly("org.yaml:snakeyaml:2.1") //for identifying the .yml
    implementation("io.github.cdimascio:dotenv-java:3.0.0")//to use Dotenv in application.java to load env

}

application {
    mainClass = "com.example.auth.Application"
}
